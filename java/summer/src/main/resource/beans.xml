<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop = "http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- HelloWolrd클래스를 사용해서 인스턴스를 만들고, 스프링컨테이너에서 식별자는 helloWorld -->
	<bean id="helloWorld" class="com.scci.summer.HelloWorld">
		<property name="message" value="Hello World!" />
	</bean>
	<!-- bean 생성 id="computer" -->
	<!-- manufacture : 삼성 -->
	<!-- serialNo : 478520810 -->
	<bean id="computer" class="com.scci.beans.Computer">
		<property name="manufacture" value="삼성" />
		<property name="serialNo" value="4855882334" />
	</bean>
	<bean id="spellChecker" class="com.scci.beans.SpellChecker">
		<constructor-arg>
			<value>kor</value>
		</constructor-arg>
	</bean>
	<bean id="textEditor" class="com.scci.beans.TextEditor">
		<constructor-arg>
			<ref bean="spellChecker" />
		</constructor-arg>
		<constructor-arg>
			<value>1.1</value>
		</constructor-arg>
	</bean>
	<bean id="person" class="com.scci.beans.Person">
		<constructor-arg>
			<value type="int">30</value>
		</constructor-arg>
	</bean>
	<bean id="books" class="com.scci.beans.Books">
		<property name="myList">
			<list>
				<value>무궁화꽃이 피었습니다</value>
				<value>태백산맥</value>
				<value>메밀꽃 필 무렵</value>
				<value>정의란 무엇인가</value>
				<value>위인전기</value>
			</list>
		</property>
		<property name="myMap">
			<map>
				<entry key="title" value="범죄도시" />
				<entry key="price" value="11800" />
				<entry key="producer" value="스티븐" />
			</map>
		</property>
	</bean>
	<bean id="singleCom" class="com.scci.beans.Computer" scope="singleton">
		<property name="manufacture" value="싱글 컴퓨터" />
		<property name="serialNo" value="585858229" />
	</bean>
	<bean id="protoCom" class="com.scci.beans.Computer" scope="prototype">
		<property name="manufacture" value="프로토 컴퓨터" />
		<property name="serialNo" value="123456789" />
	</bean>
	
	<bean id="fruit" class="com.scci.aop.Fruit" />
	<bean id="commonLog" class="com.scci.aop.CommonLog" />
	<aop:config>
		<aop:pointcut id="selectBeans" expression="execution(* com.scci.beans.*.*(..))" />
		<aop:pointcut id="selectAops" expression="execution(* com.scci.aop.*.*(..))" />
		<aop:aspect id="log" ref="commonLog">
			<aop:before pointcut-ref="selectBeans" method="beforeLog" />
			<aop:after-throwing pointcut-ref="selectAops" throwing = "ex" method="afterThrowing"/>
		</aop:aspect>
	</aop:config>
	<!-- aspectj를 사용하기 위해 아래와 같이 설정, 자바 annotation 방식 -->
	<aop:aspectj-autoproxy/>
	<!-- 
		빈으로 등록 될 준비를 마친 클래스들을 스캔하여, 빈으로 등록
		@Controller, @Service, @Component, @Repository
	  -->
	<context:component-scan base-package="com.scci.component" />
	<!-- <bean id="logging" class="com.scci.aop.Logging" /> -->
	
	<!-- <bean id="loginDao1" class="com.scci.component.LoginByLocalDaoImpl" /> -->
	<bean id="loginDao" class="com.scci.component.LoginByGoogleDaoImpl" />
	<bean id="loginServiceImpl" class="com.scci.component.LoginServiceImpl" autowire="byName" />
	
	<bean class="com.scci.component.BoardDaoImpl" />
	<bean id="boardServiceImpl" class="com.scci.component.BoardServiceImpl" autowire="byType" />
</beans>