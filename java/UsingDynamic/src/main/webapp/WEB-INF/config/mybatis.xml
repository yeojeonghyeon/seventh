<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" 
		/> <property name="url" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe" 
		/> <property name="username" value="book" /> <property name="password" value="book" 
		/> </bean> -->

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@127.0.0.1:1521:xe" />
		<property name="username" value="book" />
		<property name="password" value="book" />
	</bean>


	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:mybatis/model/model-config-oracle.xml" />
		<property name="mapperLocations"
			value="classpath:mybatis/mappers/test-oracle.xml" />
		<property name="transactionFactory">
			<bean
				class="org.mybatis.spring.transaction.SpringManagedTransactionFactory" />
		</property>
	</bean>
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="insert*" read-only="false" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" read-only="false"	propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="delete*" read-only="false"	propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
    	<aop:pointcut id="txMethod" expression="execution(* com.scci.service..*ServiceImpl.*(..))" />
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="txMethod" />
	</aop:config>

	<tx:annotation-driven />

	<!-- mysql, mariadb -->
	<!-- <bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource"> 
		<property name="driver" value="${jdbc.driverClassName}" /> <property name="url" 
		value="${jdbc.url}" /> <property name="username" value="${jdbc.username}" 
		/> <property name="password" value="${jdbc.password}" /> </bean> <bean id="sqlSessionFactory" 
		class="org.mybatis.spring.SqlSessionFactoryBean"> <property name="dataSource" 
		ref="dataSource" /> <property name="configLocation" value="classpath:mybatis/model/model-config.xml" 
		/> <property name="mapperLocations" value="classpath:mybatis/mappers/test.xml" 
		/> </bean> <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg> </bean> -->



	<!-- Member DAO는 개발자가 만든 클래스이므로 XML에서 설정하지 않고 자바코드에서 애너테이션으로 설정 <bean id="memberDAO" 
		class="com.spring.member.dao.MemberDAOImpl"> <property name="sqlSession" 
		ref="sqlSession"></property> </bean> -->

</beans>